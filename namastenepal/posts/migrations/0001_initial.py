# Generated by Django 2.2.2 on 2022-02-14 11:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import namastenepal.posts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('community', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.FileField(blank=True, null=True, upload_to=namastenepal.posts.models.get_collection_path)),
                ('category', models.CharField(choices=[('i', 'Image'), ('v', 'Video'), ('d', 'Document')], default='i', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('pinned', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('attachments', models.ManyToManyField(blank=True, related_name='post', to='posts.Attachment')),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='community_posts', to='community.Community')),
                ('hash_tags', models.ManyToManyField(blank=True, related_name='hash_tag_posts', to='core.HashTag')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
                ('reports', models.ManyToManyField(blank=True, related_name='reported_posts', to=settings.AUTH_USER_MODEL)),
                ('shared_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sharers', to='posts.Post')),
                ('tags', models.ManyToManyField(blank=True, related_name='tagged_posts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(null=True)),
                ('approved', models.BooleanField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('discuss_group', models.ManyToManyField(blank=True, related_name='discuss_group', to=settings.AUTH_USER_MODEL)),
                ('down_votes', models.ManyToManyField(blank=True, related_name='down_votes', to=settings.AUTH_USER_MODEL)),
                ('mentions', models.ManyToManyField(blank=True, related_name='mentioned_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.Comment')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.Post')),
                ('up_votes', models.ManyToManyField(blank=True, related_name='up_votes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
